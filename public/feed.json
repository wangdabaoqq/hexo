{"title":"王西柚","description":"王西柚,昏昏沉沉,不知其所以然.","language":"","link":"https://tyty.me","pubDate":"Mon, 09 Jul 2018 05:37:00 GMT","lastBuildDate":"Tue, 10 Jul 2018 06:25:16 GMT","generator":"hexo-generator-json-feed","webMaster":"王西柚","items":[{"title":"'2018年中总结'","link":"https://tyty.me/2018/07/09/年中总结/","description":"年中总结&gt; 距离上一个总结已经半年过去了, 上次的总结对于自己的要求和目标我还历历在目。说说我还在坚持的以及没有坚持到的, 看书这件事我今年开始了坚持, 因为我买了kindle, 目前javascript高程我看了80%, 但是有些知识点我还是很模糊, 我觉得在看的同时, 对于一些不太明白, 不太清晰的代码。一定要去敲下好吗, 我求你了。 因为我在看的时候有些没有敲, 相对与敲过代码的而言, 记忆薄弱了很多。 看了曾探写的`javascript设计模式与开发实践`, 这本书我没有看完, 但我受益匪浅, 忽然觉得js这门语言很好玩。等我觉得有些概念了, 我会去写关于这本书的一些设计模式的自己看法与见解。对于自己而言有时候还是会很焦躁, 感觉会的还是太少了。 对于博客我真的越来越懒, 更新频率越来越低下。说的是一个星期更新一篇, 拖到了一个月更新一次甚至更久。 健身方面的话, 中间另个一个健身房到期了, 又找了个便宜的。离得稍微近一点的。","pubDate":"Mon, 09 Jul 2018 05:37:00 GMT","guid":"https://tyty.me/2018/07/09/年中总结/","category":"年中总结"},{"title":"'我所知道的apply与call'","link":"https://tyty.me/2018/06/13/我所知道的apoly与call/","description":"我所知道的apply与call 在我打算写这篇文章之前我徘徊了两分钟(没错就是两分钟), 徘徊的原因是我觉得以我当前的对于js儿子-call与apply的掌握, 还不足以我能够很好的去解释给自己或者读者去听, 尤其是在看了一些书里面讲到了很多关于apply与call的妙用. 很神奇没有想到还能这么用. 但写了这篇文章的一个原因是我蛮久没有写了博客, 也该写了(尽力微笑…). 另一个原因是我想通过我的角度去说下我对于apply和call的看法. 其实在刚刚认识call或者apply的时候, 我在想这两个货是到底干嘛的, 在没有认识他们之前, 我也完成了某些功能的开发呀, 这两个货色的作用到底是什么, 我觉得我有必要去好好了解下. 开始认识call与apply 我打开了熟悉的mdn恩, 他好像挂了. 算了我用手机打开吧. 其中描述中这样的说道: 可以让call或者apply中的对象调用当前 对象所有的function. 你可以使用call()来实现继承: 写一个方法, 然后让另一个新的对象来继承它(而不是在新对象中再写一次这个方法). 难道是这样: 12345678910var foo = &#123; name: 'wangdaye', showName: function () &#123; console.log(this.name); &#125;&#125;var bar = &#123; name: 'liayi'&#125;foo.showName.call(bar); 我觉得这个栗子(栗子是我抄的_-_), 想表达的其实和上面描述里面提到的, 其实是一回事, 我觉得是这样, `bar`这个人想看下自己家的房产证名字写的是谁的, 但是没有梯子, 因为房产证放在需要梯子才能够到的地方, 所以他问了邻居foo, 嘿我用下你家梯子(showNmae方法), 行用吧, 然后就看到了自己的房产证是&quot;老婆的名字&quot;. 大概的的意思是, bar这个家伙没有自己方法, 但是他又想用, 怎么办那就借用了foo的方法. 就是这样. apply与apply的异同 同: apply与call 方法的第一个参数是在运行指定的this值. 需要注意的是, 指定的this值并不一定是该函数执行时真正的this值, 如果这个函数的处于非严格模式下, 则指定为null与undefined的this值会自动指向全局对象(浏览器中就是window对象), 同时值为原始值(数字, 字符串, 布尔值)的this会指向该原始值的自动包装对象. 关于这句话, 我再举个栗子: 1var max = Math.max.apply(null,array) 我在稍微说下: 这个栗子就很好的解释了上面提到的如果apply或者call的第一个参数, 我传递了null或者undefined那么这个时候this的指的就是上面提到的window, 而window里面有Math.max. 再举个栗子: 异: call参数是这样的形式(this, num1, num2, ….) apply参数是这样的形式(this, [])","pubDate":"Wed, 13 Jun 2018 06:24:00 GMT","guid":"https://tyty.me/2018/06/13/我所知道的apoly与call/","category":"js,方法"},{"title":"'Chrome扩展程序'","link":"https://tyty.me/2018/04/28/Chrome插件/","description":"","pubDate":"Sat, 28 Apr 2018 06:54:48 GMT","guid":"https://tyty.me/2018/04/28/Chrome插件/","category":"插件"},{"title":"'Javascript异步与同步'","link":"https://tyty.me/2018/04/23/Javascript异步与同步/","description":"","pubDate":"Mon, 23 Apr 2018 06:24:00 GMT","guid":"https://tyty.me/2018/04/23/Javascript异步与同步/","category":"js,事件"},{"title":"'mousewheel与DOMMouseScroll'","link":"https://tyty.me/2018/03/20/鼠标滚动事件兼容/","description":"","pubDate":"Tue, 20 Mar 2018 14:26:00 GMT","guid":"https://tyty.me/2018/03/20/鼠标滚动事件兼容/","category":"事件兼容"},{"title":"'this的值到底是什么？'","link":"https://tyty.me/2018/03/02/this的值到底是什么/","description":"","pubDate":"Fri, 02 Mar 2018 05:54:48 GMT","guid":"https://tyty.me/2018/03/02/this的值到底是什么/","category":"关于this"},{"title":"'2017年度总结'","link":"https://tyty.me/2018/02/22/2017年总结/","description":"","pubDate":"Thu, 22 Feb 2018 07:54:48 GMT","guid":"https://tyty.me/2018/02/22/2017年总结/","category":"总结"},{"title":"music","link":"https://tyty.me/2018/01/14/我在未来等你/","description":"好妹妹-我在未来等你","pubDate":"Sun, 14 Jan 2018 08:38:48 GMT","guid":"https://tyty.me/2018/01/14/我在未来等你/","category":"综合,music"},{"title":"music","link":"https://tyty.me/2018/01/12/你会爱我很久吗/","description":"秦昊-你会爱我很久吗","pubDate":"Fri, 12 Jan 2018 08:38:48 GMT","guid":"https://tyty.me/2018/01/12/你会爱我很久吗/","category":"综合,music"},{"title":"'javascript-数组去重'","link":"https://tyty.me/2018/01/10/数组去重/","description":"","pubDate":"Wed, 10 Jan 2018 07:15:15 GMT","guid":"https://tyty.me/2018/01/10/数组去重/","category":"js,Array"},{"title":"'git命令(全)'","link":"https://tyty.me/2017/10/01/git命令图(全)/","description":"git","pubDate":"Sun, 01 Oct 2017 14:02:12 GMT","guid":"https://tyty.me/2017/10/01/git命令图(全)/","category":"git命令"},{"title":"'移动端资源整合部分'","link":"https://tyty.me/2017/09/27/移动端/","description":"","pubDate":"Wed, 27 Sep 2017 15:09:56 GMT","guid":"https://tyty.me/2017/09/27/移动端/","category":"web,移动端"},{"title":"'Javascript数组方法(ES5-ES6)'","link":"https://tyty.me/2017/09/20/Javascript的数组方法/","description":"","pubDate":"Wed, 20 Sep 2017 14:30:12 GMT","guid":"https://tyty.me/2017/09/20/Javascript的数组方法/","category":"javascript,Array方法"},{"title":"'面试题目'","link":"https://tyty.me/2017/08/31/面试/","description":"","pubDate":"Wed, 30 Aug 2017 16:00:00 GMT","guid":"https://tyty.me/2017/08/31/面试/","category":"面试"},{"title":"'Promise'","link":"https://tyty.me/2017/08/10/promise/","description":"","pubDate":"Thu, 10 Aug 2017 02:54:48 GMT","guid":"https://tyty.me/2017/08/10/promise/","category":"web,ES6"},{"title":"css3","link":"https://tyty.me/2017/07/22/px转rem/","description":"","pubDate":"Sat, 22 Jul 2017 05:57:48 GMT","guid":"https://tyty.me/2017/07/22/px转rem/","category":"综合,css3"},{"title":"music","link":"https://tyty.me/2017/07/18/认错/","description":"认错-林志炫","pubDate":"Tue, 18 Jul 2017 10:30:48 GMT","guid":"https://tyty.me/2017/07/18/认错/","category":"综合,music"},{"title":"windows-ubuntu","link":"https://tyty.me/2017/06/29/windows-ubuntu/","description":"","pubDate":"Thu, 29 Jun 2017 05:30:48 GMT","guid":"https://tyty.me/2017/06/29/windows-ubuntu/","category":"综合,服务器"},{"title":"技术贴","link":"https://tyty.me/2017/04/15/技术贴/","description":"","pubDate":"Sat, 15 Apr 2017 05:30:48 GMT","guid":"https://tyty.me/2017/04/15/技术贴/","category":"综合,技术"},{"title":"'福利 - 不过百行代码的爬虫爬取美女图'","link":"https://tyty.me/2017/02/14/node爬虫/","description":"","pubDate":"Tue, 14 Feb 2017 01:54:48 GMT","guid":"https://tyty.me/2017/02/14/node爬虫/","category":"web,node"},{"title":"'深入理解正则'","link":"https://tyty.me/2017/01/14/正则/","description":"","pubDate":"Sat, 14 Jan 2017 07:54:48 GMT","guid":"https://tyty.me/2017/01/14/正则/","category":"web,正则"}]}